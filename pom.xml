<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.arturos.summer.backend</groupId>
    <artifactId>summer-digital</artifactId>
    <version>1.0-SNAPSHOT</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.2.RELEASE</version>
    </parent>

    <repositories>
        <repository>
            <id>central</id>
            <name>Maven Repository Switchboard</name>
            <layout>default</layout>
            <url>https://repo1.maven.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <properties>
        <modelmapper.version>2.4.4</modelmapper.version>
        <java.version>1.8</java.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!--        <dependency>-->
        <!--            <groupId>com.h2database</groupId>-->
        <!--            <artifactId>h2</artifactId>-->
        <!--            <scope>runtime</scope>-->
        <!--        </dependency>-->

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>

        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.22</version>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.11</version>
        </dependency>

        <dependency>
            <groupId>org.modelmapper</groupId>
            <artifactId>modelmapper</artifactId>
            <version>${modelmapper.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <dependency>
            <groupId>org.camunda.bpm.springboot</groupId>
            <artifactId>camunda-bpm-spring-boot-starter</artifactId>
            <version>7.15.0</version>
        </dependency>

        <dependency>
            <groupId>org.camunda.bpm.springboot</groupId>
            <artifactId>camunda-bpm-spring-boot-starter-rest</artifactId>
            <version>7.15.0 </version>
        </dependency>

        <dependency>
            <groupId>com.vladmihalcea</groupId>
            <artifactId>hibernate-types-52</artifactId>
            <version>2.11.1</version>
        </dependency>


    </dependencies>


    <profiles>
        <profile>
            <id>test</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>

            <properties>
                <!--                <db_url>jdbc:h2:mem:testdb</db_url>-->
                <!--                <db_url>jdbc:postgresql://10.1.1.2:5432/postgres</db_url>-->
                <db_url>jdbc:postgresql://localhost:5432/postgres</db_url>
                <db_user>sa</db_user>
                <db_pass>password</db_pass>
                <secret_lifetime_days>120</secret_lifetime_days>
                <default.schema>summer_bank</default.schema>
                <npm.env.code>development</npm.env.code>
            </properties>
        </profile>

        <profile>
            <id>h2</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>

            <properties>
                <!--                <db_url>jdbc:h2:mem:testdb</db_url>-->
                <!--                <db_url>jdbc:postgresql://10.1.1.2:5432/postgres</db_url>-->
                <db_url>jdbc:h2:mem:testdb;MODE=PostgreSQL;INIT=CREATE SCHEMA IF NOT EXISTS SUMMER_BANK</db_url>
                <db_user>sa</db_user>
                <db_pass>password</db_pass>
                <secret_lifetime_days>120</secret_lifetime_days>
                <default.schema>summer_bank</default.schema>
                <npm.env.code>development</npm.env.code>
            </properties>
        </profile>

        <profile>
            <id>docker</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>

            <properties>
                <!--suppress UnresolvedMavenProperty -->
                <db_url>${DB_URL}</db_url>
                <!--suppress UnresolvedMavenProperty -->
                <db_user>${DB_USER}</db_user>
                <!--suppress UnresolvedMavenProperty -->
                <db_pass>${DB_PASS}</db_pass>
                <!--suppress UnresolvedMavenProperty -->
                <secret_lifetime_days>${SECRET_LIFETIME}</secret_lifetime_days>
                <!--suppress UnresolvedMavenProperty -->
                <default.schema>${DEFAULT_SCHEMA}</default.schema>
                <!--suppress UnresolvedMavenProperty -->
                <npm.env.code>${ENV_CODE}</npm.env.code>
            </properties>
        </profile>

    </profiles>

    <build>
        <plugins>

            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.12.0</version>
                <configuration>
                    <nodeVersion>v12.14.1</nodeVersion>
                    <npmVersion>6.13.4</npmVersion>
                    <workingDirectory>frontend</workingDirectory>
                </configuration>

                <executions>
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                    </execution>
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm run predeploy</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>run predeploy</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm run build</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>run build -- --mode ${npm.env.code}</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm run deploy</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>run deploy</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>build-info</id>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                        <configuration>
                            <additionalProperties>
                                <time>${maven.build.timestamp}</time>
                            </additionalProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Implementation-Build-Date>${maven.build.timestamp}</Implementation-Build-Date>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>


</project>